import javax.swing.ImageIcon;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Dimension;
import javax.swing.JToggleButton;import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.JTable;

/**
 *
 * @author Tisarji
 */

public class MapMainJFrame extends javax.swing.JFrame {

	/**
	 * Creates new form MapMainJFrame
	 */
        private ButtonGroup buttonGroup;
        private int selectedButtonIndex = -1; //for select which one to place
        private int point = 0;


	public MapMainJFrame() {
		initComponents();
		setTitle("Paper Game! - Map");

                TableClass tableClass = new TableClass(6, 9);
                JTable mapTable = tableClass.createMapTable(6, 9);
                mapTable.setDefaultEditor(Object.class, null);
		MapjPanel.setLayout(new BorderLayout());
		CharacterjPanel.setLayout(new FlowLayout());

		// MapjPanel.setLayout(new GridLayout(1, 1));
		MapjPanel.add(mapTable, BorderLayout.CENTER);
		// MapjPanel.add(tableClass.createMenuTable(1, 1), BorderLayout.WEST);
                buttonGroup = new ButtonGroup();
                // button character
                   String[] imagePaths = {
                    "assets/picture/Hero/Point/Chicken Breast .png",   
                    "assets/picture/Hero/Adam/Adam-1.png",
                    "assets/picture/Hero/Ben/Ben-1.png",
                    "assets/picture/Hero/Cat/Cat-1.png",
                    "assets/picture/Hero/Chicken/Chicken_-1.png"
                         };
                   // image path 
                   String[] buttonTexts = {
            String.valueOf(point),
            "40 Point",
            "30 Point",
            "70 Point",
            "50 Point" // point for buy character
        };

                 for (int i = 0; i < imagePaths.length; i++) {
            final int buttonIndex = i; // seperate button 
            ImageIcon icon = new ImageIcon(imagePaths[i]);

            JToggleButton button = new JToggleButton(icon);
            button.setPreferredSize(new Dimension(100, 100));
            button.setText(buttonTexts[i]);
            button.setVerticalTextPosition(JToggleButton.BOTTOM);
            button.setHorizontalTextPosition(JToggleButton.CENTER);
            button.setHorizontalAlignment(JToggleButton.CENTER);
            // place string mid below button
            CharacterjPanel.add(button);

            buttonGroup.add(button);

            button.addActionListener(e -> {
                JToggleButton source = (JToggleButton) e.getSource();
                if (source.isSelected()) {
                    // when selected button
                    ButtonModel model = source.getModel();
                    if (model.isSelected()) {
                        selectedButtonIndex = buttonIndex; // return selectedButtonIndex
                    }
                } else {
                        source.setBorderPainted(false);
                    }
                
            });
        }
		setSize(1280, 720);
		setResizable(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MapjPanel = new javax.swing.JPanel();
        CharacterjPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("MvM"); // NOI18N
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setSize(new java.awt.Dimension(1280, 720));

        MapjPanel.setPreferredSize(new java.awt.Dimension(640, 360));

        javax.swing.GroupLayout MapjPanelLayout = new javax.swing.GroupLayout(MapjPanel);
        MapjPanel.setLayout(MapjPanelLayout);
        MapjPanelLayout.setHorizontalGroup(
            MapjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        MapjPanelLayout.setVerticalGroup(
            MapjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout CharacterjPanelLayout = new javax.swing.GroupLayout(CharacterjPanel);
        CharacterjPanel.setLayout(CharacterjPanelLayout);
        CharacterjPanelLayout.setHorizontalGroup(
            CharacterjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 815, Short.MAX_VALUE)
        );
        CharacterjPanelLayout.setVerticalGroup(
            CharacterjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 168, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MapjPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(CharacterjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(447, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MapjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(CharacterjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel.
		 * For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MapMainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MapMainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MapMainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MapMainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MapMainJFrame().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CharacterjPanel;
    private javax.swing.JPanel MapjPanel;
    // End of variables declaration//GEN-END:variables
}
